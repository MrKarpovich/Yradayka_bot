import telebot
from telebot import types
import random

bot = telebot.TeleBot("-)
print(f"ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å—Ç–∏–ª—Å—è, –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–µ–ª–µ–≥—É!")

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —É—Ä–æ–≤–Ω–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç–∞–∫–∞–Ω—á–∏–∫–æ–≤
levels = {
    "üé≤ –£—Ä–æ–≤–µ–Ω—å '–¢–µ—Å—Ç' (2 —Å—Ç–∞–∫–∞–Ω–∞)": (2, "ü•§ü•§"),
    "üîÆ –£—Ä–æ–≤–µ–Ω—å '–•–æ—Ä–æ—à–∞—è –∏–Ω—Ç—É–∏—Ü–∏—è' (3 —Å—Ç–∞–∫–∞–Ω–∞)": (3, "ü•§ü•§ü•§"),
    "üßô‚Äç‚ôÇÔ∏è –£—Ä–æ–≤–µ–Ω—å '–°–∏–ª—å–Ω–∞—è –∏–Ω—Ç—É–∏—Ü–∏—è!' (5 —Å—Ç–∞–∫–∞–Ω–æ–≤)": (5, "ü•§ü•§ü•§ü•§ü•§"),
    "üëë –£—Ä–æ–≤–µ–Ω—å 'GOD!' (10 —Å—Ç–∞–∫–∞–Ω–æ–≤)": (10, "ü•§ü•§ü•§ü•§ü•§ü•§ü•§ü•§ü•§ü•§"),
}

# –°—á–µ—Ç—á–∏–∫–∏
scores = {}
failures = {}
user_levels = {}
attempts = {}
secret_cups = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "üîî –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /stop")
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    for level in levels:
        markup.add(types.KeyboardButton(level))
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É '–£–≥–∞–¥–∞–π –ø–æ–¥ –∫–∞–∫–∏–º —Å—Ç–∞–∫–∞–Ω–æ–º —à–∞—Ä–∏–∫!' ü§î\n"
                                      "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å:", reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –∏–≥—Ä—ã
@bot.message_handler(func=lambda message: message.text in levels.keys())
def choose_level(message):
    level = message.text
    user_levels[message.from_user.id] = level
    num_cups, cups = levels[level]

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç–∞–∫–∞–Ω–∞
    secret_cup = random.randint(1, num_cups)
    secret_cups[message.from_user.id] = secret_cup
    bot.send_message(message.chat.id, f"üé© –û—Ç–ª–∏—á–Ω–æ! –Ø —Å–ø—Ä—è—Ç–∞–ª —à–∞—Ä–∏–∫ –ø–æ–¥ –æ–¥–Ω–∏–º –∏–∑ —ç—Ç–∏—Ö —Å—Ç–∞–∫–∞–Ω—á–∏–∫–æ–≤:\n{cups}")
    send_cups_buttons(message.chat.id, num_cups)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–æ–∫ —Å–æ —Å—Ç–∞–∫–∞–Ω—á–∏–∫–∞–º–∏
def send_cups_buttons(chat_id, num_cups):
    markup = types.InlineKeyboardMarkup(row_width=5)  # –î–æ 5 –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥
    buttons = []
    for i in range(1, num_cups + 1):
        buttons.append(types.InlineKeyboardButton("ü•§", callback_data=str(i)))

    # –†–∞–∑–±–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Ä—è–¥—ã –ø–æ 5 —Å—Ç–∞–∫–∞–Ω—á–∏–∫–æ–≤
    markup.add(*buttons)
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–∫–∞–Ω—á–∏–∫:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–∫–∞–Ω—á–∏–∫–∞
@bot.callback_query_handler(func=lambda call: True)
def callback_guess_number(call):
    user_id = call.from_user.id
    guessed_cup = int(call.data)
    secret_cup = secret_cups.get(user_id)  # –ü–æ–ª—É—á–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Å—Ç–∞–∫–∞–Ω

    attempts[user_id] = attempts.get(user_id, 0) + 1

    if guessed_cup == secret_cup:
        bot.send_message(call.message.chat.id, f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏, —à–∞—Ä–∏–∫ –±—ã–ª –ø–æ–¥ —Å—Ç–∞–∫–∞–Ω—á–∏–∫–æ–º {guessed_cup}!")
        scores[user_id] = scores.get(user_id, 0) + 1

        if scores[user_id] >= 3:
            bot.send_message(call.message.chat.id, f"üèÜ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üéØ\n"
                                                   f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: {attempts[user_id]} ‚öôÔ∏è\n"
                                                   f"–ù–µ—É–¥–∞—á–Ω—ã—Ö: {failures.get(user_id, 0)} üòì")
            reset_game(user_id)
            send_stop_button(call.message.chat.id)
        else:
            bot.send_message(call.message.chat.id, "üé≤ –î–∞–≤–∞–π—Ç–µ —Å—ã–≥—Ä–∞–µ–º –µ—â–µ —Ä–∞–∑!")
            next_round(call.message, user_id)
    else:
        bot.send_message(call.message.chat.id, f"üôà –ú–∏–º–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        failures[user_id] = failures.get(user_id, 0) + 1
        next_round(call.message, user_id)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞—É–Ω–¥–∞
def next_round(message, user_id):
    level = user_levels.get(user_id)
    num_cups, cups = levels[level]
    secret_cup = random.randint(1, num_cups)
    secret_cups[user_id] = secret_cup

    bot.send_message(message.chat.id, f"ü§´ –Ø —Å–Ω–æ–≤–∞ —Å–ø—Ä—è—Ç–∞–ª —à–∞—Ä–∏–∫ –ø–æ–¥ –æ–¥–Ω–∏–º –∏–∑ —ç—Ç–∏—Ö —Å—Ç–∞–∫–∞–Ω—á–∏–∫–æ–≤:\n{cups}")
    send_cups_buttons(message.chat.id, num_cups)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –∏–≥—Ä—ã
def reset_game(user_id):
    scores[user_id] = 0
    failures[user_id] = 0
    user_levels.pop(user_id, None)
    attempts.pop(user_id, None)
    secret_cups.pop(user_id, None)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ /stop
def send_stop_button(chat_id):
    markup = types.ReplyKeyboardRemove()
    bot.send_message(chat_id, "üö´ –ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã.", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stop
@bot.message_handler(commands=['stop'])
def stop_game(message):
    send_stop_button(message.chat.id)

import time
while True:
    try:
        bot.polling(none_stop=True, timeout=60)
    except Exception as e:
        print(f"–°–º–æ—Ç—Ä–∏: {e}")
        time.sleep(5)
